/* Container lays children horizontally */
.three-part {
  display: flex;
  width: 100%;
  min-height: 60vh;      /* adjust height as needed */
  gap: 20px;              /* space between columns (optional) */

}

/* Each column */
.part {
  position: relative;    /* so absolute children are scoped here */
  flex: 1;               /* equal width columns */
  overflow: hidden;      /* keep bg image clipped to the box */
  border-radius: 12px;   /* optional */
  height: 600px;
}

/* Background image fills the box cleanly */
.part-bg {
  position: absolute;
  inset: 0;              /* top/right/bottom/left = 0 */
  width: 100%;
  height: 100%;
  object-fit: cover;     /* no stretching or overflow */
  z-index: 0;
  object-position: top;    /* align image to top instead of center */
}

/* Optional dark overlay for contrast */
.part::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.45));
  z-index: 0;
}

/* Foreground content sits above the image */
.part-content {
  position: relative;    /* creates a new stacking context */
  z-index: 1;            /* above the bg image + overlay */
  color: #fff;
  padding: 24px;

  display: flex;
  flex-direction: column;   /* stack h2 and p vertically */
  justify-content: space-between; /* push h2 to top, p to bottom */
  height: 100%; 
}

.part-content h2 {
    font-weight: bold;
}

.part-content p {
    margin-bottom: 60px;
}


/* Basic responsive: stack vertically on narrow screens */
@media (max-width: 768px) {
  .three-part {
    flex-direction: column;
    min-height: auto;
  }
  .part {
    min-height: 35vh; /* give each stacked section some height */
  }
}
